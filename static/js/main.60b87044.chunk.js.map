{"version":3,"sources":["components/forceGraphGenerator.js","components/forceGraph.js","App.js","index.js","components/forceGraph.module.css"],"names":["runForceGraph","container","links","data","nodes","containerRect","getBoundingClientRect","height","width","drag","simulation","d3","on","d","active","alphaTarget","restart","fx","x","fy","y","document","querySelector","tooltipDiv","createElement","classList","add","styles","tooltip","style","opacity","id","body","appendChild","div","force","strength","svg","append","attr","call","transform","link","selectAll","join","Math","sqrt","value","node","label","enter","text","name","transition","duration","html","pageX","pageY","addTooltip","source","target","destroy","stop","ForceGraph","containerRef","React","useRef","useEffect","destroyFn","current","ref","className","App","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.60b87044.chunk.js","sourcesContent":["import * as d3 from \"d3\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport styles from \"./forceGraph.module.css\";\r\nimport data from \"../data/data.json\"\r\n\r\nexport function runForceGraph(container) {\r\n  const links  = data.links;\r\n  const nodes = data.nodes;\r\n\r\n  const containerRect = container.getBoundingClientRect();\r\n  const height = containerRect.height;\r\n  const width = containerRect.width;\r\n\r\n  // Controls how the simulation behaves when a node is dragged\r\n  // For the meaning of alphaTarget etc see\r\n  // https://github.com/d3/d3-force#simulation_alphaTarget\r\n  const drag = (simulation) => {\r\n    const dragstarted = (d) => {\r\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    };\r\n\r\n    const dragged = (d) => {\r\n      d.fx = d3.event.x;\r\n      d.fy = d3.event.y;\r\n    };\r\n\r\n    const dragended = (d) => {\r\n      if (!d3.event.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    };\r\n\r\n    return d3\r\n      .drag()\r\n      .on(\"start\", dragstarted)\r\n      .on(\"drag\", dragged)\r\n      .on(\"end\", dragended);\r\n  };\r\n\r\n  // Add the tooltip element to the graph\r\n  const tooltip = document.querySelector(\"#graph-tooltip\");\r\n  if (!tooltip) {\r\n    const tooltipDiv = document.createElement(\"div\");\r\n    tooltipDiv.classList.add(styles.tooltip);\r\n    tooltipDiv.style.opacity = \"0\";\r\n    tooltipDiv.id = \"graph-tooltip\";\r\n    document.body.appendChild(tooltipDiv);\r\n  }\r\n  const div = d3.select(\"#graph-tooltip\");\r\n\r\n  // Function to add the tooltip over the node on mouseover\r\n  const addTooltip = (d) => {\r\n    div.transition().duration(200).style(\"opacity\", 0.9);\r\n    const html = `<div><b>${d.name}</b></div>`;\r\n    div\r\n      .html(html)\r\n      .style(\"left\", `${d3.event.pageX}px`)\r\n      .style(\"top\", `${d3.event.pageY - 28}px`);\r\n  };\r\n\r\n  // Function to remove the tooltip after the mouse moves\r\n  // off the node\r\n  const removeTooltip = () => {\r\n    div.transition().duration(200).style(\"opacity\", 0);\r\n  };\r\n\r\n  // This creates the d3 force simulation\r\n  const simulation = d3\r\n    // Pass the nodes we want it to use\r\n    .forceSimulation(nodes)\r\n    // This sets up the force generated by the links between the nodes\r\n    .force(\r\n      \"link\",\r\n      d3.forceLink(links).id((d) => d.id)\r\n    )\r\n    // This sets up the force between the nodes themselves\r\n    .force(\"charge\", d3.forceManyBody().strength(-1150))\r\n    // These forces keep the nodes towards the centre of the screen\r\n    .force(\"x\", d3.forceX())\r\n    .force(\"y\", d3.forceY());\r\n\r\n  const svg = d3\r\n    .select(container)\r\n    .append(\"svg\")\r\n    .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\r\n    .call(\r\n      d3.zoom().on(\"zoom\", function () {\r\n        svg.attr(\"transform\", d3.event.transform);\r\n      })\r\n    );\r\n  \r\n  // Setup the link style\r\n  const link = svg\r\n    .append(\"g\")\r\n    .attr(\"stroke\", \"#999\")\r\n    .attr(\"stroke-opacity\", 0.6)\r\n    .selectAll(\"line\")\r\n    .data(links)\r\n    .join(\"line\")\r\n    .attr(\"stroke-width\", (d) => Math.sqrt(d.value));\r\n    \r\n  // Setup the node with the side of the nodes\r\n  // their fill colour, text style etc\r\n  const node = svg\r\n    .append(\"g\")\r\n    .attr(\"stroke\", \"#fff\")\r\n    .attr(\"stroke-width\", 2)\r\n    .selectAll(\"circle\")\r\n    .data(nodes)\r\n    .join(\"circle\")\r\n    // Controls the radius of the node circles\r\n    .attr(\"r\", 32)\r\n    // Set the colour of the node fill\r\n    .attr(\"fill\", \"#457b9d\")\r\n    .call(drag(simulation));\r\n\r\n  const label = svg\r\n    .append(\"g\")\r\n    .attr(\"class\", \"labels\")\r\n    .selectAll(\"text\")\r\n    .data(nodes)\r\n    .enter()\r\n    .append(\"text\")\r\n    .attr(\"text-anchor\", \"middle\")\r\n    .attr(\"dominant-baseline\", \"central\")\r\n    .style(\"fill\", \"white\")\r\n    .style(\"font\", \"2vh serif\")\r\n    .text((d) => {\r\n      return d.name;\r\n    })\r\n    .call(drag(simulation));\r\n\r\n  label\r\n    .on(\"mouseover\", (d) => {\r\n      addTooltip(d, d3.event.pageX, d3.event.pageY);\r\n    })\r\n    .on(\"mouseout\", () => {\r\n      removeTooltip();\r\n    });\r\n  \r\n  // A tick is a single iteration of the simulation\r\n  simulation.on(\"tick\", () => {\r\n    // Update link positions\r\n    link\r\n      .attr(\"x1\", (d) => d.source.x)\r\n      .attr(\"y1\", (d) => d.source.y)\r\n      .attr(\"x2\", (d) => d.target.x)\r\n      .attr(\"y2\", (d) => d.target.y);\r\n\r\n    // Update node positions\r\n    node.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\r\n\r\n    // Update label positions\r\n    label\r\n      .attr(\"x\", (d) => {\r\n        return d.x;\r\n      })\r\n      .attr(\"y\", (d) => {\r\n        return d.y;\r\n      });\r\n  });\r\n\r\n  return {\r\n    destroy: () => {\r\n      simulation.stop();\r\n    },\r\n    nodes: () => {\r\n      return svg.node();\r\n    },\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { runForceGraph } from \"./forceGraphGenerator\";\r\nimport styles from \"./forceGraph.module.css\"\r\n\r\nexport function ForceGraph() {\r\n  const containerRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    let destroyFn;\r\n\r\n    if (containerRef.current) {\r\n      const { destroy } = runForceGraph(\r\n        containerRef.current,\r\n      );\r\n      destroyFn = destroy;\r\n    }\r\n\r\n    return destroyFn;\r\n  }, []);\r\n\r\n  return <div ref={containerRef} className={styles.container} />;\r\n}\r\n","import React from 'react';\n\nimport { ForceGraph } from \"./components/forceGraph\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        A simple force graph\n      </header>\n      <section className=\"Main\">\n        <ForceGraph/>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"forceGraph_container__2Fpro\",\"node\":\"forceGraph_node__3azZm\",\"tooltip\":\"forceGraph_tooltip__24MRW\"};"],"sourceRoot":""}